 pipeline{
  agent {
  label 'master'
  }
  tools {
  "maven" "3.9.1"
  }
  //options {}
    //triggers{}
    stages{
    stage('1clone'){
    steps{
    	sh "echo 'clonining the lastest application version' "
    	 git  "https://github.com/lanredevops/maven-web-application.git"
    	sh "echo 'lastest application version available for testing' "
      }	
    }
    	
    stage('2TestBuild'){
    steps{
    	sh "echo 'running JUnit-test-case' "
    	sh "echo 'testing must passed to create artifacts' "
    	sh "mvn clean package"

    	}
   	 }
stage('3CodeQualityAnalysis'){
   steps{
   sh "echo setup sonarQube authentication "
   sh "echo 'Performing CodeQualityAnalysis' "
   sh "mvn sonar:sonar"
   }
 }
 stage('4UploadArtifacts'){
  steps{
  sh "echo configure nexus authentication "
  sh "mvn deploy"
  }
 }
 stage('5deploy'){
	steps{
	deploy adapters: [tomcat9(credentialsId: 'tomcat', path: '', url: 'http://54.160.93.253:8177/')], contextPath: null, war: 'target/*war'
	}
}
//stage('5deploy'){}
    }
post {
   always{
emailext body: '''Great and well-done team

Lanredev0ps''', recipientProviders: [buildUser(), developers()], subject: 'Build success', to: 'xcessluv@gmail.com'

   }
   success{
emailext body: '''Great and well-done team

Lanredev0ps''', recipientProviders: [buildUser(), developers()], subject: 'Build success', to: 'xcessluv@gmail.com'
   }
   failure{
   emailext body: '''Hi team
Review this job 

Lanredev0ps''', recipientProviders: [buildUser(), developers()], subject: 'Build Failed', to: 'xcessluv@gmail.com'
   }
   
   }

}
